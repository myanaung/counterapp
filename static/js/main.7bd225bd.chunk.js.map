{"version":3,"sources":["Counter.jsx","CounterHooks.jsx","App.jsx","index.js"],"names":["Counter","props","changeCount","amount","setState","prevState","count","state","initialCount","ThemeContext","Consumer","style","onClick","React","Component","CounterHooks","useState","setCount","useContext","prevCount","createContext","App","theme","setTheme","Provider","value","backgroundColor","prevTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAgCeA,E,kDA5Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoBRC,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEC,MAAOD,EAAUC,MAAQH,OApBpC,EAAKI,MAAQ,CACXD,MAAOL,EAAMO,cAJE,E,0CAOnB,WAAU,IAAD,OACP,OACE,cAACC,EAAaC,SAAd,UACG,SAACC,GAAD,OACC,gCACE,wBAAQA,MAAOA,EAAOC,QAAS,kBAAM,EAAKV,aAAa,IAAvD,eACA,+BAAO,EAAKK,MAAMD,QAClB,wBAAQK,MAAOA,EAAOC,QAAS,kBAAM,EAAKV,YAAY,IAAtD,yB,GAfUW,IAAMC,WCYbC,EAZM,SAAC,GAAoB,IAAnBP,EAAkB,EAAlBA,aACnB,EAA2BQ,mBAASR,GAApC,mBAAOF,EAAP,KAAeW,EAAf,KACMN,EAAQO,qBAAWT,GAC3B,OACE,gCACE,wBAAQE,MAAOA,EAAOC,QAAS,kBAAMK,GAAS,SAAAE,GAAS,OAAIA,EAAa,MAAxE,eACA,+BAAOb,IACP,wBAAQK,MAAOA,EAAOC,QAAS,kBAAMK,GAAS,SAAAE,GAAS,OAAIA,EAAY,MAAvE,mBCNOV,EAAeI,IAAMO,gBAuBnBC,MArBf,WACE,MAA0BL,mBAAS,OAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,OACE,eAACd,EAAae,SAAd,CAAuBC,MAAO,CAAEC,gBAAiBJ,GAAjD,oBAEE,cAAC,EAAD,CAASd,aAAc,IAFzB,gBAIE,cAAC,EAAD,CAAcA,aAAc,IAC5B,wBACEI,QAAS,kBACPW,GAAS,SAACI,GACR,MAAqB,QAAdA,EAAsB,OAAS,UAH5C,8BCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7bd225bd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ThemeContext } from \"./App\";\r\n\r\nclass Counter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: props.initialCount,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {(style) => (\r\n          <div>\r\n            <button style={style} onClick={() => this.changeCount(-1)}>-</button>\r\n            <span>{this.state.count}</span>\r\n            <button style={style} onClick={() => this.changeCount(1)}>+</button>\r\n          </div>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  changeCount = (amount) => {\r\n    this.setState((prevState) => {\r\n      return { count: prevState.count + amount };\r\n    });\r\n  };\r\n}\r\n\r\nexport default Counter;\r\n","import React , {useContext, useState} from \"react\";\r\nimport { ThemeContext } from './App';\r\n\r\nconst CounterHooks = ({initialCount}) => {\r\n    const [count , setCount] = useState(initialCount);\r\n    const style = useContext(ThemeContext);\r\n  return (\r\n    <div>\r\n      <button style={style} onClick={() => setCount(prevCount => prevCount  - 1)}>-</button>\r\n      <span>{count}</span>\r\n      <button style={style} onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CounterHooks;\r\n","import React, { useState } from \"react\";\nimport Counter from \"./Counter\";\nimport CounterHooks from \"./CounterHooks\";\n\nexport const ThemeContext = React.createContext();\n\nfunction App() {\n  const [theme, setTheme] = useState(\"red\");\n  return (\n    <ThemeContext.Provider value={{ backgroundColor: theme }}>\n      Counter\n      <Counter initialCount={4} />\n      Counter Hooks\n      <CounterHooks initialCount={4} />\n      <button\n        onClick={() =>\n          setTheme((prevTheme) => {\n            return prevTheme === \"red\" ? \"blue\" : \"red\";\n          })\n        }\n      >\n        Toggle Theme\n      </button>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}